(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{278:function(n,e,t){"use strict";t.r(e);var r=t(77),l=t.n(r),o={data:function(){return{link:"content9",prekiji:"\n## 想定読者\n　JavaScriptの基本が分かる人。JavaScriptに興味がある人。Slideアプリを自作したい人。Svelteが気になっている人。\n\n## 使ったもの\n\n- Svelte\n- marked-katex\n\n## 話す内容\n\n- marked-katexの紹介\n- Svelteの紹介\n- Svelteアプリの作成手順の紹介\n\n## 長くて読まないよという人に\n\n- サイト: https://zodiac-g12.github.io/SVIDE/\n- ソースコード: https://github.com/zodiac-G12/SVIDE\n\n## marked-katex\n\n　あまりメジャーではないので、個人的に愛用しているので盛り上がるといいなと思っている。\n以下は公式から引用したmarked-katexの説明。\n\n> JavaScriptで記述されたフル機能のマークダウンパーサーおよびコンパイラー。スピードのために作られました。この(markedからの)フォークバージョンは、マークダウンで数式を記述できるKatexをサポートしています https://github.com/linxiaowu66/marked-kaTex\n\n[katex](https://katex.org/) とはMathJaxより高速なLaTeXのような数式を記述するためのツール。\n\n大学で理系だった人はLaTeXで論文を書いたりしたと思う。\n\nこのブログも実はmarked-katexを使用している。\n\n```latex\n`$$H(S)=\\sum_{i=0}^{r}P(s_i)\\log_2\\frac{1}{P(s_i)}　[bit / symbol]$$`\n```\n上のように書くと以下のような数式に変換される。\n`$$H(S)=\\sum_{i=0}^{r}P(s_i)\\log_2\\frac{1}{P(s_i)}　[bit / symbol]$$`\n\nしかしながら、今回は数式は使わないので、markedでも可である。\nあくまでチラ見せの紹介に留めておく。\n\n## Svelteの3つの原則\n\n　以下の三つを謳っている。\n\n- [**Write less code**](https://svelte.dev/blog/write-less-code)\n\n>「Build boilerplate-free components using languages you already know — HTML, CSS and JavaScript」\n\n>「HTML, CSS, JavaScriptでボイラープレートフリーなコンポーネントをビルドする」\n\n- [**No virtual DOM**](https://svelte.dev/blog/virtual-dom-is-pure-overhead)\n\n>「Svelte compiles your code to tiny, framework-less vanilla JS — your app starts fast and stays fast」\n\n>「フレームワークレスな小さなバニラJSにコンパイルし、とても高速に動作する」\n\n- [**Truly reactive**](https://svelte.dev/blog/svelte-3-rethinking-reactivity)\n\n>「No more complex state management libraries — Svelte brings reactivity to JavaScript itself」\n\n>「JavaScript自体に反応性をもたらし、これ以上複雑な状態管理ライブラリを要しない」\n\n## Svelteの世界的評価\n\n　Front-end Frameworksのランキングで2020年において満足度、興味、利用率、認知度に関して1位を獲得している。\n\n> https://2020.stateofjs.com/en-US/technologies/front-end-frameworks/\n\n## Slideアプリ作成の手順\n\n1. Svelteテンプレート作成\n2. Svelteの公式のSlide実装例から拝借する\n3. markedのインストール\n4. markdown対応に修正\n\n## Svelteテンプレート作成\n　以下のコマンドを実行。めちゃくちゃ早くてすぐにでも始めることができる。\n```bash\nnpx degit sveltejs/template my-svelte-project\n# or download and extract \ncd my-svelte-project\n# to use TypeScript run:\n# node scripts/setupTypeScript.js\n\nnpm install\nnpm run dev\n```\n\n> 公式ドキュメント: https://svelte.dev/\n\n## Svelteの公式のSlide実装例から拝借する\n　[このページ](https://svelte.dev/repl/0add35f59c6148cc8e5a415b2e38c83a?version=3.12.1)\nのソースコードをコピペする。\n> 余談: Svelteは意外とExampleが充実していて、やりたいこと知りたいことでググるとまず出てくる。\n\n> 公式の実装例一覧: https://svelte.dev/examples#hello-world\n\n## markedのインストール\n　以下を実行\n\n```bash\nnpm i marked-katex --save\n```\n<br>\n\n## markdown対応に修正\n\n　まずmarkedのimport\n\n```typescript\nimport marked from 'marked-katex';\n```\n\n　https://svelte.dev/repl/0add35f59c6148cc8e5a415b2e38c83a?version=3.12.1\nの57行目\n\n```typescript\n{slide.content}\n```\n\nを\n\n```svelte\n{@html String(marked(slide.content))}\n```\n\nに修正。\n> {@html ...}とは: https://svelte.dev/docs#html\n\n\n## 成果\n\n　できあがったものがこちら。\n- サイト: https://zodiac-g12.github.io/SVIDE/\n- ソースコード: https://github.com/zodiac-G12/SVIDE\n\n## Svelteを触ってみた感想\n　体感だが、めちゃくちゃ軽くて、めちゃくちゃ速い。\n\nそして、プロパティ更新をReactのようにあまり気にしなくて良いので、非常に楽ちん。\n\n記述するコードの量も非常に少なくて済むという、公式の主張にも納得がいった。\n"}},computed:{kiji:function(){return l()(this.prekiji)}},components:{DefaultArticle:function(){return t.e(0).then(t.bind(null,283))}}},d=t(20),component=Object(d.a)(o,(function(){var n=this.$createElement,e=this._self._c||n;return e("div",[e("DefaultArticle",{attrs:{content:{link:this.link,kiji:this.kiji}}})],1)}),[],!1,null,null,null);e.default=component.exports}}]);