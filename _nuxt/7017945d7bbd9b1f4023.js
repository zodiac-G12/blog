(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{273:function(n,t,e){"use strict";e.r(t);var r=e(77),f=e.n(r),l={data:function(){return{link:"content4",prekiji:'\n## Rustのコード\n\n```rust\nfn fibd(n: u32) -> i128 {\n    match n {\n        0 | 1 => 1,\n        _ => {\n            let mut a = 1;\n            let mut b = 1;\n\n            for _ in 1..n/2+1 {\n                a += b;\n                b += a;\n            }\n\n            match n%2 {\n                0 => a,\n                _ => b\n            }\n        }\n    }\n}\n\nfn main() {\n    println!("{}", fibd(183));\n}\n```\n　\n\n## 実行例\n\n```sh\n$ cargo run\n127127879743834334146972278486287885163\n```\n　\n## 追記(こちらの方が個人的に好き)\n\n__fibd__を書き換えてみる\n\n```rust\nfn fibd(n: u32) -> i128 {\n    let mut fiba: [i128; 2] = [1; 2];\n                     \n    for _ in 1..n/2+1 {                                      \n        fiba[0] += fiba[1];                     \n        fiba[1] += fiba[0];                     \n    }                              \n            \n    fiba[(n%2) as usize] \n} \n```\n\n'}},computed:{kiji:function(){return f()(this.prekiji)}},components:{DefaultArticle:function(){return e.e(0).then(e.bind(null,283))}}},c=e(20),component=Object(c.a)(l,(function(){var n=this.$createElement,t=this._self._c||n;return t("div",[t("DefaultArticle",{attrs:{content:{link:this.link,kiji:this.kiji}}})],1)}),[],!1,null,null,null);t.default=component.exports}}]);